<Mods LoadCommand = "%xero(function(self)
	oldtime=GAMESTATE:GetSongTime()
	smoothdt=0
	acc=0
	--mang_aft_visible=false
	function RealFov(fov)
          return 360 / math.pi * math.atan(math.tan(math.pi * fov / 360) * DISPLAY:GetDisplayWidth() / DISPLAY:GetDisplayHeight() * (9/16))
    end
	self:SetVanishPoint(scx, scy)
	self:fov(RealFov(45))
	P1:hidden(1)
	P2:hidden(1)
	
	local function setupProxy(proxy, target, pn)
		proxy:SetTarget(target)
		proxy:xy(scx * (((pn-1)%2)+0.5), scy)
		target:hidden(1)
		target:sleep(9e9)
	end
	
	-- notefield proxies
	for pn = 1, #PP do
		setupProxy(PP[pn], P[(pn-1)%2+1]:GetChild('NoteField'), pn)
	end
	
	-- judgment / combo proxies
	for pn = 1, 2 do
		setupProxy(PC[pn], P[pn]:GetChild('Combo'), pn)
		setupProxy(PJ[pn], P[pn]:GetChild('Judgment'), pn)
	end
	-- your code goes here here:
	--im putting all initial bg stuff here :]

for i=1,2,1 do
	load[i]:hidden(1)
	load[i]:xy(scx,scy*1.75)
end
	load[1]:zoomto(sw-scx*0.333,sw*0.02)
	load[2]:zoomto(sw-scx*0.35,sw*0.015)
	load[1]:diffuse(0,0,0,1)
	load[2]:diffuse(1,1,1,1)
	
for i=1,2 do
		pieces[i]:zoomto(0,200)
		pieces[i]:SetTextureFiltering(false)
		pieces[i]:zbuffer(1)
		pieces[i]:hidden(1)
	end
	pieces[1]:y(scy*0.9)
	pieces[2]:y(scy*0.9)

--thank you xero
zbufferclearerorwhateveryouregonnacallit:zoom(0)
zbufferclearerorwhateveryouregonnacallit:clearzbuffer(1)

windows:hidden(1)
windows:xy(scx,scy)
windows:zoomto(sw*0.2,sw*0.2)

--windows 3.0
--windows:rotationz(-20) 

do
  local Table = {}
  for i = 1,10 do
    table.insert(Table,'michealsoft.png')
  end
  table.insert(Table,'microsoft.png')
  local a = Table[math.random(1,#Table)]
  if a then
    micheal:Load(GAMESTATE:GetCurrentSong():GetSongDir()..'lua/mang/elements/'..a)
  end
end

for i=1,3 do
	crash[i]:xy(scx,scy)
	crash[i]:SetTextureFiltering(false)
	crash[i]:zoomto(sw*4,sh*4)
	crash[i]:hidden(1)
	crash[i]:vibrate(1)
	crash[i]:effectmagnitude(sw*3,sh*3,400)
end
	crash[1]:blend('invertdest')
	crash[2]:blend('invertdest')
	crash[3]:blend('invertdest')

micheal:hidden(1)
micheal:xy(scx,scy)
micheal:zoomto(sw*0.95,sh*0.95)

windowsbg:hidden(1)
windowsbg:xy(scx,scy)
windowsbg:zoomto(sw,sh)
windowsbg:diffuse(0,0.4,0.4,1)

shamebg:hidden(0)
shamebg:xy(scx,scy)
shamebg:zoomto(sw,sh)

vignette[1]:hidden(1)
vignette[1]:blend('modulate')
vignette[1]:xy(scx,scy)
vignette[1]:zoomto(sw*2,sw*2)
vignette[1]:diffusealpha(0.001)

vignette[2]:hidden(0)
vignette[2]:blend('subtract')
vignette[2]:xy(scx,scy)
vignette[2]:zoomto(sw,sw)

gradient_full:hidden(0)
gradient_full:blend('add')
gradient_full:diffuse(1,0.8,0.9,1)
gradient_full:xy(scx,scy)
gradient_full:zoomto(sw,sh)

gradient:hidden(0)
gradient:blend('add')
gradient:diffuse(1,0.8,0.9,1)
gradient:xy(scx,scy)
gradient:zoomto(sw,sh)

noise:hidden(0)
noise:blend('subtract')
noise:vibrate(1)
noise:effectmagnitude(sw/2,sh/2,0)
noise:xy(scx,scy)
noise:zoomto(sw*2,sh*2)

star[1]:hidden(1)
--star[1]:xy((math.random()*100)*scx*0.02,scy*3)
--star[1]:diffusealpha(0.2)
--star[1]:blend('add')
--star[1]:zoomto(sw*0.25,sw*0.25)

star[2]:hidden(0)
star[2]:diffusealpha(0.5)
star[2]:customtexturerect(0,0,7,7)
star[2]:xy(scx,scy)
star[2]:zoomto(sw,sw)

mang_initial[1]:xy(scx,scy)
mang_initial[1]:diffuse(0,0,0,1)
mang_initial[1]:zoomto(sw,sh)
mang_initial[1]:hidden(0)

mang_initial[2]:xy(scx,scy)
mang_initial[2]:diffuse(0.5*0.3,0.1*0.3,0.1*0.3,1)
mang_initial[2]:zoomto(sw,sh)
mang_initial[2]:hidden(0)

mang_aftsprite1:xy(scx,scy)
mang_aftsprite1:hidden(0)
mang_aftsprite1:SetTextureFiltering(false)
mang_aftsprite1:SetTexture(mang_aft1:GetTexture())

mang_aft1:xy(scx,scy)
mang_aft1:hidden(0)

solarize[1]:hidden(0)
solarize[1]:diffuse(1,1,1,0)
solarize[1]:blend('invertdest')
solarize[1]:xy(scx,scy)
solarize[1]:zoomto(sw,sh)

solarize[2]:hidden(0)
solarize[2]:diffuse(1,1,1,0)
solarize[2]:blend('invertdest')
solarize[2]:xy(scx,scy)
solarize[2]:zoomto(sw,sh)

mang_BA[1]:hidden(1)
mang_BA[1]:xy(scx-(scx*0.02),(scy*2-(scy*-0.08))*0.3)
mang_BA[1]:zoomto(sw*0.95,sw*0.35)
mang_BA[1]:SetTextureFiltering(false)

mang_BA[2]:hidden(1)
mang_BA[2]:xy(scx-(scx*-0.02),(scy*2-(scy*0.08))*0.75)
mang_BA[2]:zoomto(sw*0.95,sw*0.35)
mang_BA[2]:SetTextureFiltering(false)

mang_BA[3]:hidden(1)
mang_BA[3]:xy(scx,scy)
mang_BA[3]:zoomto(sw*1,sh*0.6)
mang_BA[3]:SetTextureFiltering(false)

for i=1,4 do
	mang_BA2[i]:hidden(0)
	mang_BA2[i]:xy(scx,scy)
	mang_BA2[i]:zoom(2)
	mang_BA2[i]:diffusealpha(0.25)
	mang_BA2[i]:blend('modulate')
	mang_BA2[i]:SetTextureFiltering(false)
	mang_BA2[i]:vibrate(1)
	mang_BA2[i]:effectmagnitude(sw/4,sh/4,0)
end

--invert march setup

for i=1,2 do
	stripe[i]:hidden(1)
	stripe[i]:xy(scx,scy)
	stripe[i]:zoomto(sw*2,sw*2)
	stripe[1]:blend('weightedmultiply')
	stripe[2]:blend('weightedmultiply')
end
	stripe[2]:diffuse(1,1,1,1)

local function stripespeed(amt)
	stripe[1]:texcoordvelocity(amt,amt)
end
aux 'stripespeed'
node{'stripespeed',stripespeed,defer=true}

local function stripeskew(amt)
	stripe[1]:skewx(amt)
end
aux 'stripeskew'
node{'stripeskew',stripeskew,defer=true}

local function stripecrop(amt)
	stripe[1]:cropright(amt)
end
aux 'stripecrop'
node{'stripecrop',stripecrop,defer=true}

local function striperot(amt)
	stripe[1]:rotationz(amt)
end
aux 'striperot'
node{'striperot',striperot,defer=true}

local function striperotx(amt)
	stripe[1]:rotationx(amt)
end
aux 'striperotx'
node{'striperotx',striperotx,defer=true}

local function stripeiterate(amt)
	stripe[1]:customtexturerect(0,0,amt,amt)
end
aux 'stripeiterate'
node{'stripeiterate',stripeiterate,defer=true}

--2

local function stripespeed2(amt)
	stripe[2]:texcoordvelocity(amt,amt)
end
aux 'stripespeed2'
node{'stripespeed2',stripespeed2,defer=true}

local function stripeskew2(amt)
	stripe[2]:skewx(amt)
end
aux 'stripeskew2'
node{'stripeskew2',stripeskew2,defer=true}

local function stripecrop2(amt)
	stripe[2]:cropright(amt)
end
aux 'stripecrop2'
node{'stripecrop2',stripecrop2,defer=true}

local function striperot2(amt)
	stripe[2]:rotationz(amt)
end
aux 'striperot2'
node{'striperot2',striperot2,defer=true}

local function striperotx2(amt)
	stripe[2]:rotationx(amt)
end
aux 'striperotx2'
node{'striperotx2',striperotx2,defer=true}

local function stripeiterate2(amt)
	stripe[2]:customtexturerect(0,0,amt,amt)
end
aux 'stripeiterate2'
node{'stripeiterate2',stripeiterate2,defer=true}

FishSprite:SetTexture(FishAft:GetTexture())
FishSprite:hidden(1)
--FishSprite:SetTextureFiltering(false)
FishSprite:GetShader():uniform1f('amount',0)
	
vhsSprite:SetTexture(vhsAft:GetTexture())
vhsSprite:hidden(1)

heatSprite:SetTexture(heatAft:GetTexture())
heatSprite:hidden(1)
heatSprite:GetShader():uniform1f('exp',1)
heatSprite:GetShader():uniform1f('yo',0)
heatSprite:GetShader():uniform1f('tx',0)
heatSprite:GetShader():uniform1f('ty',0)

glitch2Sprite:SetTexture(glitch2Aft:GetTexture())
glitch2Sprite:hidden(1)
glitch2Sprite:SetTextureFiltering(false)
glitch2Sprite:GetShader():uniform1f('amount',0.1)

crtSprite:SetTexture(crtAft:GetTexture())
crtSprite:hidden(1)

	--im putting all initial mods stuff here :]
func{0,function(beat)
	for i=1,2 do	
		PP[i]:x(scx)
	end
end}
set{0,2,'xmod',
	200,'zoomz',
	100,'stealthpastreceptors',
	1,'alphastealth0',
	1,'alphastealth1',
	1,'alphastealth2',
	1,'alphastealth3',
	1,'recursezoom',
	1,'judgezoom',
	3*scy,'grad1posy',
	5*scy,'grad2posy',
	1,'crt',
	1,'load',
	45,'fov',
	1.7,'pieceszoomx',
	1,'michealsoft',
	scx,'loadx',
	10,'stripeiterate',
	10,'stripeiterate2',
	1,'stripecrop2',
	--0,'heat',
	--scy*3,'stary',
}

--shader eases

function feesh(feeshamt)
	FishSprite:GetShader():uniform1f('amount',feeshamt)
end
aux 'fisheye'
node{'fisheye',feesh}

function glitch2(amt)
	glitch2Sprite:GetShader():uniform1f('amount',amt)
end
aux 'glitch2'
node{'glitch2',glitch2}

function crt(amt)
	crtSprite:diffusealpha(amt)
	vhsSprite:diffusealpha(amt)
end
aux 'crt'
node{'crt',crt}

function heat(amt)
	--heatSprite:diffusealpha(amt)
	heatSprite:GetShader():uniform1f('yo',amt)
	heatSprite:GetShader():uniform1f('tx',amt)
	heatSprite:GetShader():uniform1f('ty',amt)
	shamebg:diffusealpha(amt)
end
aux 'heat'
node{'heat',heat,defer=true}

--local functions
--col specific alphastealth
aux{'alphastealth0','alphastealth1','alphastealth2','alphastealth3'}
func{0,9e9,function(beat,poptions)
  for pn = 1,2 do
    for col = 0,3 do
      P[pn]:SetNumArrowGradientPoints(col,1)
      P[pn]:SetArrowGradientPoint(0,col,1)
      P[pn]:SetArrowGradientColor(0,col,1,1,1,poptions[pn]['alphastealth'..col])
    end
  end
end}

--[[local function alphastealth(amt)
	for col=0,3 do
		for i=1,2 do
			P[i]:SetNumArrowGradientPoints(col,1)
			P[i]:SetArrowGradientPoint(0,col,1)
			P[i]:SetArrowGradientColor(0,col,1,1,1,amt)
		end
	end
end
aux 'alphastealth'
node{'alphastealth',alphastealth}

local function alphastealth0(amt)
	for i=1,2 do
		P[i]:SetNumArrowGradientPoints(0,1)
		P[i]:SetArrowGradientPoint(0,0,1)
		P[i]:SetArrowGradientColor(0,0,1,1,1,amt)
	end
end
aux 'alphastealth0'
node{'alphastealth0',alphastealth0}
--col 1
local function alphastealth1(amt)
	for i=1,2 do
		P[i]:SetNumArrowGradientPoints(1,1)
		P[i]:SetArrowGradientPoint(0,1,1)
		P[i]:SetArrowGradientColor(0,1,1,1,1,amt)
	end
end
aux 'alphastealth1'
node{'alphastealth1',alphastealth1}
--col 2
local function alphastealth2(amt)
	for i=1,2 do
		P[i]:SetNumArrowGradientPoints(2,1)
		P[i]:SetArrowGradientPoint(0,2,1)
		P[i]:SetArrowGradientColor(0,2,1,1,1,amt)
	end
end
aux 'alphastealth2'
node{'alphastealth2',alphastealth2}
--col 3
local function alphastealth3(amt)
	for i=1,2 do
		P[i]:SetNumArrowGradientPoints(3,1)
		P[i]:SetArrowGradientPoint(0,3,1)
		P[i]:SetArrowGradientColor(0,3,1,1,1,amt)
	end
end
aux 'alphastealth3'
node{'alphastealth3',alphastealth3}]]--

--the rest

local function thecamellia(hits)
	for i=1,4 do
		mang_BA2[i]:effectmagnitude(sw/hits,sh/hits,0)
	end
end
aux 'thecamellia'
node{'thecamellia',thecamellia}

local function thecamellia2(hits)
	for i=1,4 do
		mang_BA2[i]:diffusealpha(hits)
	end
end
aux 'thecamellia2'
node{'thecamellia2',thecamellia2}

local function recursezoom(amt)
	mang_aftsprite1:zoom(amt)
end
aux 'recursezoom'
node{'recursezoom',recursezoom}

local function recurse1(amt)
	mang_aftsprite1:diffusealpha(amt)
end
aux 'recursediff'
node{'recursediff',recurse1}

local function recursevelocityx(amt)
	mang_aftsprite1:x(scx+amt)
end
aux 'recursevx'
node{'recursevx',recursevelocityx}

local function recursevelocityy(amt)
	mang_aftsprite1:y(scy+amt)
end
aux 'recursevy'
node{'recursevy',recursevelocityy}

local function noteinvertdest(amt)
	solarize[1]:diffusealpha(amt)
	solarize[2]:diffusealpha(amt)
end
aux 'noteinv'
node{'noteinv',noteinvertdest}

local function baa1(amt)
	mang_BA[1]:zoom(amt)
end
aux 'baa1zoom'
node{'baa1zoom',baa1}

local function baa2(amt)
	mang_BA[2]:zoom(amt)
end
aux 'baa2zoom'
node{'baa2zoom',baa2}

local function baa3(amt)
	mang_BA[3]:zoom(amt)
end
aux 'baa3zoom'
node{'baa3zoom',baa3}

local function baa3S(amt)
	mang_BA[3]:skewx(amt)
	for i=1,4 do
		mang_BA2[i]:skewx(amt)
	end
end
aux 'baa3skew'
node{'baa3skew',baa3S}

local function baa3y(amt)
	mang_BA[3]:zoomy(amt)
	for i=1,4 do
		mang_BA2[i]:zoomy(amt)
	end
end
aux 'baa3y'
node{'baa3y',baa3y}

local function vigamt(amt)
	vignette[2]:diffuse(1,1,1,amt)
end
aux 'vigdiff'
node{'vigdiff',vigamt}

local function judgezoom(amt)
	for i=1,2 do
		PJ[i]:zoom(amt)
	end
end
aux 'judgezoom'
node{'judgezoom',judgezoom}

local function vibratep(amt)
	for i=1,2 do
		PP[i]:vibrate(1)
		PP[i]:effectmagnitude(amt,amt,0)
	end
end
aux 'playervibrate'
node{'playervibrate',vibratep}

function gradpos1(amt)
	gradient:y(amt)
end
aux 'grad1posy'
node{'grad1posy',gradpos1}

function gradpos2(amt)
	gradient_full:y(amt)
	star[2]:y(amt)
end
aux 'grad2posy'
node{'grad2posy',gradpos2}

function winrotx(amt)
	windows:rotationx(amt)
end
aux 'winrotx'
node{'winrotx',winrotx}

function windiff(amt)
	windows:diffusealpha(amt)
end
aux 'windiff'
node{'windiff',windiff}

function winskew(amt)
	windows:skewx(amt)
end
aux 'winskew'
node{'winskew',winskew}

function winy(amt)
	windows:zoomy(amt)
end
aux 'winy'
node{'winy',winy}

function winbgx(amt)
	windowsbg:zoomx(amt)
end
aux 'winbgx'
node{'winbgx',winbgx,defer=true}

function winbgskew(amt)
	windowsbg:skewx(amt)
end
aux 'winbgskew'
node{'winbgskew',winbgskew}

function winbgy(amt)
	windowsbg:zoomy(amt)
end
aux 'winbgy'
node{'winbgy',winbgy}


function loadprogress(amt)
	load[2]:cropright(amt)
end
aux 'load'
node{'load',loadprogress}

function loadx(amt)
	load[1]:x(amt)
	load[2]:x(amt)
end
aux 'loadx'
node{'loadx',loadx,defer=true}

function fovslider(amt)
	for i=1,2 do
		self:fov(RealFov(amt))
	end
end
aux 'fov'
node{'fov',fovslider}

--pieces 

function piecesx1(amt)
	pieces[1]:x(amt)
end
aux 'piecesx1'
node{'piecesx1',piecesx1,defer=true}
function piecesz1(amt)
	pieces[1]:z(amt)
end
aux 'piecesz1'
node{'piecesz1',piecesz1,defer=true}

function piecesx2(amt)
	pieces[2]:x(amt)
end
aux 'piecesx2'
node{'piecesx2',piecesx2,defer=true}
function piecesz2(amt)
	pieces[2]:z(amt)
end
aux 'piecesz2'
node{'piecesz2',piecesz2,defer=true}

function pieceszoomx(amt)
	for i=1,2 do
		pieces[i]:zoomx(amt)
	end
end
aux 'pieceszoomx'
node{'pieceszoomx',pieceszoomx,defer=true}

function pieceszoom1(amt)
	pieces[1]:zoom(amt)
end
aux 'pieceszoom1'
node{'pieceszoom1',pieceszoom1,defer=true}

function pieceszoom2(amt)
	pieces[2]:zoom(amt)
end
aux 'pieceszoom2'
node{'pieceszoom2',pieceszoom2,defer=true}

function noiseamt(amt)
	noise:diffusealpha(amt)
end
aux 'noise'
node{'noise',noiseamt,defer=true}

--squish that micheal
function michealsoft(amt)
	micheal:zoomx(amt)
end
aux 'michealsoft'
node{'michealsoft',michealsoft,defer=true}

--[[function stary(amt)
	star[1]:y(amt)
end
aux 'stary'
node{'stary',stary}

function starx(amt)
	star[1]:x(amt)
end
aux 'starx'
node{'starx',starx}]]--

--[[local function p2vibrate(amt)
	for i=1,2 do
		PJ[i]:zoom(amt)
	end
end
aux 'judgezoom'
node{'judgezoom',judgezoom}]]--


end)"
Type = "ActorFrame"
><children>
	<p>Welcome to my website</p>
	<Layer Type = "Quad" Name = "mang_initial[1]" />
	<Layer Type = "Quad" Name = "mang_initial[2]" />
	<Layer Type = "Quad" Name = "gradient_full" />
	<Layer File = "mang/elements/gradient.png" Name = "gradient" />
	
	<Layer Type = "Sprite" InitCommand = "%xero.sprite" Name = "mang_aftsprite1" />
	
	<Layer File = "spellcards.xml" />

	<Layer File = "mang/default.xml" />
	<Layer File = "yasmyn64/default.xml" />

	<Layer File = "notedata/recurse1.xml" />
	<Layer File = "notedata/offsetdrums.xml" />
	<Layer File = "notedata/synth.xml" />
	<Layer File = "yasmyn64/notedate.xml" />



	<Layer Type = "Quad" Name = "windowsbg" />
	<Layer Type = "Quad" Name = "load[1]" />
	<Layer Type = "Quad" Name = "load[2]" />
	<Layer File = "mang/elements/widnows.png" Name = "windows" />
	<Layer File = "mang/elements/shamebg1.png" Name = "shamebg" />
	<Layer Type = "ActorProxy" Name = "PC[1]" />
	<Layer Type = "ActorProxy" Name = "PC[2]" />
	<Layer Type = "ActorProxy" Name = "PJ[1]" />
	<Layer Type = "ActorProxy" Name = "PJ[2]" />

	<Layer Type = "Quad" Name = "solarize[2]" />

	<Layer Type = "ActorProxy" Name = "PP[1]" />
	<Layer Type = "ActorProxy" Name = "PP[2]" />
	<Layer File = "mang/elements/stripe.png" Name = "stripe[1]"/>
	<Layer File = "mang/elements/stripe.png" Name = "stripe[2]"/>
	<Layer File = "mang/elements/crash1.png" Name = "crash[1]" />
	<Layer File = "mang/elements/crash2.png" Name = "crash[2]" />
	<Layer File = "mang/elements/crash3.png" Name = "crash[3]" />

	<Layer Type = "Quad" Name = "solarize[1]" />
	
	
	<Layer File = "mang/elements/BA1.png" Name = "mang_BA[1]" />
	<Layer File = "mang/elements/BA2.png" Name = "mang_BA[2]" />
	<Layer File = "mang/elements/BA3.png" Name = "mang_BA[3]" />

	<Layer File = "mang/elements/BA21.png" Name = "mang_BA2[1]" />
	<Layer File = "mang/elements/BA22.png" Name = "mang_BA2[2]" />
	<Layer File = "mang/elements/BA23.png" Name = "mang_BA2[3]" />
	<Layer File = "mang/elements/BA24.png" Name = "mang_BA2[4]" />

	<Layer Type = "Quad" Name = "zbufferclearerorwhateveryouregonnacallit" />

	<Layer Type = "ActorFrameTexture" InitCommand = "%xero.aft" Name = "mang_aft1" />
	
	<Layer LoadCommand="luaeffect,loop" loopCommand="%xero(function(self) 
		local curtime=GAMESTATE:GetSongTime()
		local dt=curtime-oldtime
		oldtime=curtime
		smoothdt=smoothdt*0.5+(dt*0.5)
		acc=acc+smoothdt
		if acc>0 then
			mang_aft1:hidden(0)
			acc=acc-(1/60)
		else
			mang_aft1:hidden(1)
		end
	end)" />

	<Layer File = "vignette.png" Name = "vignette[1]" />
	<Layer File = "vignette2.png" Name = "vignette[2]" />

	<Layer File = "mang/elements/sparkles.png" Name = "star[1]" />
	<Layer File = "mang/elements/star.png" Name = "star[2]" />

	<Layer Type="ActorFrameTexture" InitCommand="%xero.aft" Name="FishAft" />
	<Layer Type="Sprite" Frag="shaders/fisheye.frag" InitCommand="%xero.sprite" Name="FishSprite"/>

	<Layer File = "mang/elements/pieces.png" Name = "pieces[1]" />
	<Layer File = "mang/elements/pieces.png" Name = "pieces[2]" />
	<Layer File = "mang/elements/michealsoft.png" Type = "Sprite" Name = "micheal" />

	<Layer Type="ActorFrameTexture" InitCommand="%xero.aft" Name="vhsAft" />
	<Layer Type="Sprite" Frag="shaders/vhs.frag" InitCommand="%xero.sprite" Name="vhsSprite"/>
	<Layer Type="ActorFrameTexture" InitCommand="%xero.aft" Name="glitch2Aft" />
	<Layer Type="Sprite" Frag="shaders/glitch2.frag" InitCommand="%xero.sprite" Name="glitch2Sprite"/>
	<Layer Type="ActorFrameTexture" InitCommand="%xero.aft" Name="crtAft" />
	<Layer Type="Sprite" Frag="shaders/crt.frag" InitCommand="%xero.sprite" Name="crtSprite"/>
	<Layer Type="ActorFrameTexture" InitCommand="%xero.aft" Name="heatAft" />
	<Layer Type="Sprite" Frag="shaders/heat.frag" InitCommand="%xero.sprite" Name="heatSprite"/>

	<Layer File = "mang/elements/noise.png" Name = "noise" />

	
</children></Mods>
