<Mods LoadCommand = "%xero(function(self)
	self:SetVanishPoint(scx, scy)
	self:fov(45)
	P1:hidden(1)
	P2:hidden(1)
	
	local function setupProxy(proxy, target, pn)
		proxy:SetTarget(target)
		proxy:xy(scx * (((pn-1)%2)+0.5), scy)
		target:hidden(1)
		target:sleep(9e9)
	end
	
	-- notefield proxies
	for pn = 1, #PP do
		setupProxy(PP[pn], P[(pn-1)%2+1]:GetChild('NoteField'), pn)
	end
	
	-- judgment / combo proxies
	for pn = 1, 2 do
		setupProxy(PC[pn], P[pn]:GetChild('Combo'), pn)
		setupProxy(PJ[pn], P[pn]:GetChild('Judgment'), pn)
	end
	-- a bunch of stuff so that i can just quick tab it
--[[The following eases are transient eases:

bounce tri bell pop tap spike pulse spike inverse
popElastic[damping_factor][oscillation_speed]
tapElastic[damping_factor][oscillation_speed]
pulseElastic[damping_factor][oscillation_speed]
impulse [damp]

The following eases are not transient:

instant linear
inQuad outQuad inOutQuad
inCubic outCubic inOutCubic
inQuart outQuart inOutQuart
inQuint outQuint inOutQuint
inExpo outExpo inOutExpo
inCirc outCirc inOutCirc
inElastic outElastic inOutElastic
inBack outBack inOutBack
inBounce outBounce inOutBounce
inSine outSine inOutSine]]--
--ease {start, lenth, ease_func, percent, mod, plr = player #, m=e}
--add
-- turn on invert
--{20, 1, outExpo, 100, 'invert'}
-- with `add`, you have to subtract 100 to bring invert back down to 0.
--{22, 1, outExpo, -100, 'invert'}
	-- your code goes here here:
	--reminder to put your code here here where
local pi,pie=math.pi,math.pi*100
function rad(deg)
	return math.rad(deg) * 100
end
--local inv=2*(i%2)-1
--local switch=i%2
set{0,50,'flip',
	100,'dark',
	1,'alphastealth0',
	1,'alphastealth1',
	1,'alphastealth2',
	1,'alphastealth3',
	1,'recursezoom',
	100,'arrowpathdrawsizeback',
	100,'arrowpathdrawsize',
	0.12,'vigdiff',
	0.3,'winy'
}
for i=0,1 do
	add{12+4*i,2,pop,-30,'dark',
	}
	add{12+4*i,4,pop,100,'tipsy',
		-100,'drunk',
	}
end
for i=0,9 do
	add{12+4*i,2,pop,-0.06,'vigdiff',
		30,'arrowpath',
		50,'tanbumpy',
		50,'zigzag',
	}
end

ease{4,20,inExpo,0,'dark', --lol
	0,'flip',
m=e}
--CIRCULAR...CIRCULAR!!! (jank and should have used poptions but i stole it from CERiNG c:
func{0,20, function(beat)
    for pn = 1, 2 do
        for col = 0, 3 do
			local pi=math.pi
            local period=(beat*(beat/16)+col*2)*pi/4-(150*pn)
            local x=(beat-20)*50*math.cos(period)
            local z=(beat-20)*50*math.sin(period)
            GAMESTATE:ApplyModifiers('*-1 '..x..' movex'..col..',*-1 '..z..' movez'..col, pn)
        end
    end
end}
--residual
set{20,0,'movex',
	0,'movez',
}

--[[func{0,function(beat)
	GAMESTATE:ForceSmoothLines(0)
end}
set{0,1000,'arrowpathgirth'}]]--


ease{52,4,linear,1000,'stealth',
	1000,'sudden'
}
--a ya sa

for i=0,2 do
	local inv=2*(i%2)-1
	ease{80.75+i*0.5,1,outExpo,40*inv,'noteskewx',
		-40*inv,'skewx',
		-40*inv,'noteskewy',
		40*inv,'skewy',
		50,'brake'
	}
	set{82.25,0,'noteskewx',
		0,'skewx',
		0,'noteskewy',
		0,'skewy'
	}
end
ease{82.25,2,outExpo,100,'noteskewx',
		-100,'skewx',
		-100,'noteskewy',
		100,'skewy',
}
ease{82.25,84-82.25,inExpo,0,'noteskewx',
		0,'skewx',
		0,'noteskewy',
		0,'skewy',
}
ease{84,3,popElastic[2][6],40,'skewx',
	40,'skewy',
}

--aeeeeeeeee
ease{80.75,4,outExpo,100,'dark',
	0,'stealth',
	100,'hidenoteflashes',
plr=2}
ease{80.75,1.5,inExpo,180,'rotationz',
	200,'zoom',
	pie*-1,'confusionoffset',
	100,'wireframe',
	10,'drunk',
plr=1}
ease{80.75,3.5,inExpo,180,'rotationy',
	-1*pie,'confusionyoffset',
plr=1}
ease{83,1,inExpo,0.1,'alphastealth0',
	0.1,'alphastealth1',
	0.1,'alphastealth2',
	0.1,'alphastealth3',
plr=2}
for i=0,3 do
	ease{83+4*i,4,pop,1,'recursediff',
	plr=2}
	ease{84+4*i,5,pop,0,'alphastealth0',
		0,'alphastealth1',
		0,'alphastealth2',
		0,'alphastealth3',
		50,'dark',
		0,'hidenoteflashes',
		1,'recursevy',
	plr=2}
end
for i=0,11 do
	add{86+i,3,outExpo,90,'rotationy',
	-1*pie,'confusionyoffset',
	plr=1}
end


for i=0,2 do
	local inv=2*(i%2)-1
	--ease{84+i*4,4,inExpo,4*inv,'rotationz'}
	ease{84+i*4,4,pop,-50,'tiny',
	}
end
for i=0,15 do
	local inv=2*(i%2)-1
	local noteskews = {'noteskewy','noteskewx'}
	local skews = {'skewy','skewx'}
	local move = {'drunk','tipsy'}
	ease{84+i,1,pop,-50,'tiny',
		20*inv,noteskews[math.random(1,2)],
		-20*inv,skews[math.random(1,2)],
		-20*inv,move[math.random(1,2)]
	}
end
--xero wants a wallpaper
--[[set{84,100,'dark',
	100,'blind',
plr=1}
set{84,100,'blind',
	-25,'flip'
}
func{84,function(beat)
	PJ[1]:hidden(1)
	PJ[2]:hidden(1)
end}]]--
--huhuhuhue-e-e-e-e

ease{96,2,inExpo,180,'rotationz',
	pie*-1,'confusionoffset',
	180,'rotationy',
	pie*-1,'confusionyoffset',
plr=2}
ease{96,2,inExpo,100,'zoom',plr=1}

for i=0,2 do
	local inv=2*(i%2)-1
	ease{98+i*0.5,1,outExpo,40*inv,'noteskewx',
		-40*inv,'skewx',
		-40*inv,'noteskewy',
		40*inv,'skewy',
		0,'drunk'
	}
end
ease{99,1,inExpo,0,'rotationz',
	0,'confusionoffset',
	0,'rotationy',
	0,'confusionyoffset',
}
set{99.5,0,'wireframe'}
ease{100,3,outElastic,0,'skewx',0,'skewy',0,'noteskewx',0,'noteskewy'}

set{100,2,'baa3y',
	1,'thecamellia2',
	1,'thecamellia',
}
func{100,function(beat)
	for i=1,4 do
		mang_BA2[i]:hidden(0)
		mang_BA2[i]:blend('modulate')
		mang_BA2[i]:zoom(2)
	end
end}

kick0 = {
	{100,0,1},
	{100.25,0,1},
	{100.75,0,1},
	{101,0,1},
	{101.75,0,1},
	{102.5,0,1},
	{103.25,0,1},
	{104,0,1},
	{104.75,0,1},
	{105.5,0,1},
	{106.25,0,1},
	{107,0,1},
	{107.25,0,1},
	{108,0,1},
	{108.5,0,1},
	{109,0,1},
	{109.5,0,1},
	{110,0,1},
	{110.5,0,1},
	{111,0,1},
	{111.5,0,1},
	{112,0,1},
	{112.5,0,1},
	--{113,0,1},
	--{113.5,0,1},
}
for i,v in ipairs(kick0) do
	local inv=2*(i%2)-1
	add{v[1],0.75,outExpo,1,'zoom',
		--120,'tinyz',
		180/11,'rotationx',
		pie/-11,'confusionxoffset',
		1,'brake',
	}
	ease{v[1],1.5,pop,20*(math.sqrt(i)*0.75)*inv,'noteskewx',
		-20*(math.sqrt(i)*0.75)*inv,'skewx'
	}
end

ease{100,14,inQuad,4,'thecamellia'
}
set{112,0,'thecamellia2'}
set{113,0,'confusionxoffset',
	0,'rotationx'
}
set{116,0,'brake'}
--relating to the drills

ease{227,4,outQuad,100,'dark0',
	100,'dark1',
	100,'dark3',
}

for k,v in ipairs(recurse1) do
	ease{v[1],1,inCirc,50,'flip',
		0,'amt'
	}
	ease{v[1]+1,3,outExpo,100,'stealth',
		100,'dark',
		100,'hidenoteflashes',
		3000,'longholds',
		1000,'tipsyspeed',
	}
	for i=0,3 do
		if i>0 then
		ease{v[1]+i*8,2,inQuad,100,'stealth',
			100,'dark',
			100,'hidenoteflashes',
			0,'longholds'
		}
		ease{v[1]+i*8,1,outExpo,50,'stealth'}
		end
		set{v[1]+4+i*8,-100,'flip',
			pie*0.5,'confusionoffset'
		}
		ease{v[1]+5+i*8,3,outQuint,0,'dark0',
			0,'dark1',
			0,'dark3',
			0,'hidenoteflashes',
			0,'longholds',
			0,'flip',
			0,'stealth',
			0,'confusionoffset'
		}
		ease{v[1]+5+i*8,3,outQuint,0,'dark'}
		ease{v[1]+5+i*8,3,popElastic[1][2],-220,'movey',
			40,'flip',
			200,'tinyx',
			-100,'tinyy',
			-100,'drunk',
			-300,'tipsy'
		}
	end
	--glitchy stuff
	mang_aftsprite1:diffusealpha(0.9)
	mang_aftsprite1:hidden(1)
	func{v[1]+7,function(beat)
		mang_aftsprite1:hidden(0)
	end}
	for j=0,3 do
		for i=0,14 do 
			local switch=i%2+0.96
			local inv=2*(i%3)-1
			local inv2=4*(i%3)-1

			func{v[1]+7+i*0.125+j*8,function(beat)
				mang_aftsprite1:diffusealpha(switch)
				mang_aftsprite1:xy(scx+(3*inv),scy+(1*inv2))

				PJ[1]:xy(scx*0.5+math.random()*20*inv,scy+math.random()*20*inv)
				PJ[2]:xy(scx*1.5+math.random()*20*inv,scy+math.random()*20*inv)
			end}
			func{v[1]+9+j*8,function(beat)
				mang_aftsprite1:diffusealpha(0)
				PJ[1]:xy(scx*0.5,scy)
				PJ[2]:xy(scx*1.5,scy)
			end}
			set{v[1]+5+j*8,0,'sudden'}
			ease{v[1]+7+i*0.125+j*8,0.125,outExpo,
				--40*inv,'bumpyx',
				50*inv,'zigzag',
			}
			ease{v[1]+7+i*0.125+j*8,0.125,outExpo,100*inv,'tiny',
			plr=1}
			ease{v[1]+9+j*8,4,outExpo,
				--0,'bumpyx',
				0,'zigzag',
				0,'tinyz',
				0,'tiny',
				--0,'spiralx',
				100,'sudden',
				0,'skewy',
				0,'noteskewy',
				0,'rotationx',
				0,'orient'
			}
			ease{v[1]+9+i*0.125+j*8,0.125,outExpo,0*inv,'spiralx',plr=2}
		end
		for i=0,14 do
			local switch=i%2+1
			local switch0=i%2
			ease{v[1]+7+i*0.125+j*8,0.125,outExpo,50*switch,'stealth',plr=2}
			ease{v[1]+9+j*8,4,outExpo,100,'stealth'}
			set{v[1]+7+i*0.125+j*8,1*switch0,'noteinv'}
		end
		for i=0,7 do
			local inv=2*(i%2)-1
			local switch=(i+1)%2
			ease{v[1]+7+i*0.25+j*8,0.25,outExpo,5*inv,'skewy',
				-5*inv,'noteskewy',
				5*inv,'rotationx',
				20,'orient',
				100*switch,'invert'
			}
		end
	end
	ease{v[1]+9+27,1,outExpo,0,'stealth',
		0,'sudden'
	}
end
--error break
for i=0,2 do
	ease{112+i,0.125,outExpo,50,'stealth',
		150,'invert',
		-25,'flip'
	}
	ease{112.5+i,0.125,outExpo,0,'stealth',
		0,'invert',
		0,'flip'
	}
end
--error messages
ease{112.5,4,outExpo,0.999,'recursediff',
	0,'recursevx',
	0,'recursevy',
	1.025,'recursezoom',
}
ease{112.5,0.5,outBack,1.5,'baa1zoom'}
ease{113,0.5,outElastic,1.5,'baa2zoom'}

func{112,function(beat)
	mang_BA[1]:hidden(0)
	mang_BA[1]:zoom(0)
end}
func{112.5,function(beat)
	mang_BA[2]:hidden(0)
	mang_BA[2]:zoom(0)
end}
ease{114,0.25,outExpo,100,'invert'}
func{114,function(beat)
	mang_BA[1]:blend('invertdest')
	mang_BA[2]:blend('invertdest')
end}
--xp error
func{160.5,function(beat)
	mang_BA[3]:hidden(0)
	mang_BA[3]:zoom(0)
end}
ease{161,1,outElastic,1.8,'baa3zoom'}

--ease{164,1,popElastic[1][6],2,'baa3zoom'}
ease{162,2,outExpo,0.9,'recursezoom',
	1,'recursediff',
	}
--fun with recursiveness
ease{161,1,outExpo,100,'invert'}
ease{162,2,inExpo,0,'invert'}
for i=0,15-4 do
	local switch=i%2
	local inv=2*(i%2)-1
	add{164+i,1,popElastic[1][6],-0.05,'recursezoom',
		-5*5,'zoom',
		-0.05*5,'baa3zoom',
		-0.2,'judgezoom',
	}
	ease{164+i,1,outExpo,20*inv,'noteskew',
		-20*inv,'skewx',
	}
	ease{164+i,1,pop,100,'arrowpath',
		20*inv,'zigzag',
	}
	add{164+i,2,pop,pie*0.25*inv,'confusionoffset',
		-0.4,'fisheye'
	}
	ease{164,13,inExpo,-0.2,'fisheye'}
for i=0,15 do
	local inv=2*(i%2)-1
	ease{171+i*(1/16),1/16,outExpo,31*inv,'confusionoffset',
	}
end
ease{171,2,pop,0.5,'spiralx',
	1,'tanbumpyx',
	20,'arrowpathgrain'
}
end

for i=0,3 do
	local switch=i%2
	local inv=2*(i%2)-1
	add{176+i*0.5,1,popElastic[1][6],-0.05,'recursezoom',
		-5*5,'zoom',
		-0.05*5,'baa3zoom',
		-0.2,'judgezoom',
	}
	ease{176+i*0.5,1,outExpo,20*inv,'noteskew',
		-20*inv,'skewx',
	}
	ease{176+i*0.5,1,pop,100,'arrowpath',
		20*inv,'zigzag',
	}
	add{176+i*0.5,2,pop,pie*0.25*inv,'confusionoffset',
		-0.1,'fisheye'
	}
end

--glitch break
for i=0,3 do
	local inv=2*(i%2)-1
	ease{178+i*0.5,0.5,outExpo,
		0,'noteskew',
		0,'skewx',
	}
	ease{178,0.5,outExpo,
		0,'confusionoffset'}
end
for i=0,2 do
	local inv=2*(i%2)-1
	ease{178+i*0.5,0.5,outExpo,100*inv*(i*0.75),'noteskewy'}
end
ease{179,1,inCirc,0,'noteskewy'}
--thanks
func{164,14,function(beat,poptions)
	poptions[2].brake=(math.random()*200)-100
	poptions[2].bumpyx=((math.random()*200)-100)*0.4
end}

set{161,100,'tinyz',
	80,'zoom',
	0-(scy*-0.32),'x',
	0+(scy*-0.15),'y',
	100,'hidenoteflashes',
	100,'sudden',
	60,'suddenoffset',
	-100,'drawsizeback',
	-100,'arrowpathdrawsizeback',
	-10,'arrowpathdrawsize',
	25,'tiny',
	1.5,'xmod',
	0,'brake',
	1,'judgezoom',
	100,'dizzyholds',
	2,'baa3y',
}
set{162,1,'thecamellia2',
	1,'thecamellia'
}
ease{162,178,inExpo,4,'thecamellia',m=e}
ease{179.5,0.4999,inExpo,-1,'baa3skew',
	0,'baa3y',
	-100,'skewx',
	0,'zoomy',
plr=1}

for i=0,7 do
	local switch=(i+1)%2
	ease{165+i*0.75,1,outExpo,100*switch,'invert'}
end
add{171,2,pop,40,'tiny'}
ease{171,2,outExpo,pie*-2,'confusionyoffset',
	360,'rotationy'
}
for i=0,6 do
	local switch=(i+1)%2
	ease{173+i*0.75,1,outExpo,100*switch,'invert'}
end

set{180,0,'skewx',
	100,'zoomy',
	0,'baa3y',
	0,'baa3skew',
}
func{180.01,function(beat)
	for i=1,4 do
		mang_BA2[i]:blend('weightedmultiply')
		--mang_BA2[i]:blend('add')
		mang_BA2[i]:skewx(0)
		mang_BA2[i]:hidden(0)
		mang_BA2[i]:zoomy(1)
		PP[2]:hidden(1)
	end
end}
ease{179,1,inExpo,0,'y',
	0,'x',
	0,'tinyz',
	0,'sudden',
	0,'tiny',
	0,'hidenoteflashes',
	2,'xmod',
	0,'confusionoffset',
	1,'alphastealth0',
	1,'alphastealth1',
	1,'alphastealth2',
	1,'alphastealth3',	
	60,'rotationx',
	pie*-0.333,'confusionxoffset',
	
}
func{180,function(beat)
	PJ[1]:xy(scx*0.5,scy)
	PJ[2]:xy(scx*1.5,scy)
end}
add{180,4,outExpo,-0.02,'recursezoom',
}
add{180,1,outExpo,-100,'invert'}

kick = {
	{180,0,1},
	{180.75,0,1},
	{181.5,0,1},
	{182.25,0,1},
	{183,0,1},
	{183.5,0,1},
	{183.75,0,1},
	{184,0,1},
	{184.75,0,1},
	{185.5,0,1},
	{186.25,0,1},
	{187,0,1},
	{187.5,0,1},
	{187.75,0,1},
	{188,0,1},
	{189.5,0,1},
	{189.75,0,1},
	{190,0,1},
	{191.5,0,1},
	{191.75,0,1},
	{192,0,1},
}
func{162,function(beat)
	FishSprite:hidden(0)
end}
for i,v in ipairs(kick) do
	local inv=2*(i%2)-1
	if i<14 then 
		ease{v[1],0.75,pop,1,'playervibrate',
			1,'thecamellia2',
			32,'thecamellia',
		}
	end
	ease{v[1],0.75,pop,-200,'tiny',
		-100,'tinyz',
		20*inv,'noteskewy',
		20*(i*0.5+1)*inv,'cubicx'}

	add{v[1],4,outExpo,25/4,'zoom',
		0.01,'recursezoom',
		45/4,'rotationx',
		(-0.125/2)*pie,'confusionxoffset',
		10,'cubicz',
		5,'zoomz',
		10,'attenuate'
	}
	add{v[1],2,pop,-0.2,'fisheye',
		--100,'tinyz'
	}
end
set{180,0.05,'thecamellia2',
	1,'thecamellia',
	0,'rotationy',
	0,'skewy'
}
for i=0,1 do 
	local inv=2*(i%2)-1
	ease{188+i*2,2,pop,6,'playervibrate',
		0.2,'thecamellia2',
		16,'thecamellia',
	}
	ease{188+i*2,4,outExpo,(-90/1.5)*inv,'skewy',
		(90/1.5)*inv,'rotationy'
	}
end
ease{192,2,pop,12,'playervibrate',
	0.4,'thecamellia2',
	32,'thecamellia',
}
ease{192,4,outExpo,100,'zoom',
	1,'recursezoom',
	0,'confusionxoffset',
	0,'rotationx',
	0,'skewy',
	0,'cubicz',
	0,'attenuate'
}
add{192,4,outExpo,pie*2,'confusionyoffset',
	(-90/1.5)-360,'rotationy'}
--bye
func{181,function(beat)
	mang_BA[3]:hidden(1)
end}

--right button and left beef
func{162,function(beat)
	PJ[1]:xy(scx/1.9,scy*1.585)
	PJ[2]:xy(scx*1.41,scy*1.585)
end}
--
ease{162,2,inCirc,1.02,'recursezoom'}
func{162,function(beat)
	mang_BA[3]:blend('invertdest')
end}
--ease{178,2,outExpo,0,'recursediff',
--}
ease{178,1,outExpo,999,'thecamellia'}

ease{114,2,outExpo,-360,'rotationy',
	pie*2,'confusionyoffset',
	0,'invert',
	-1000,'tinyz',
	100,'zigzag',
	--100,'wireframe',
}
ease{114,1,outExpo,50,'zoom'}
ease{115,1,inExpo,100,'zoom'}
for i=0,15 do
	local switch=(i+1)%2
	set{114+i*0.125,100*switch,'wireframe'}
end
func{116,function(beat)
	mang_BA[1]:hidden(1)
	mang_BA[2]:hidden(1)
end}
ease{116,1,pop,-6000,'tinyz',}
ease{116,4,outExpo,0,'zigzag',
	1,'recursezoom',
	0,'recursediff',
	0,'tinyz'
}
ease{116,2,popElastic[2][6],120,'zoom',
	-50,'tinyx',
	50,'tinyy',
	-10,'flip',
}
--wehh
ease{128,2,inExpo,100,'reverse',
	180,'rotationy',
	pie*-1,'confusionyoffset',
plr=1}
ease{130,3,outExpo,360*2,'rotationy',
	pie*-4,'confusionyoffset',
plr=1}
ease{128,3,inExpo,100,'stealth',
	100,'dark',
plr=1}
set{130,100,'hidenoteflashes',plr=1}

set{128,100,'stealth',
	100,'dark',
	100,'hidenoteflashes',
	400,'zoom',
plr=2}
ease{130,2,outExpo,0,'stealth',
	0,'dark',
	0,'hidenoteflashes',
	50,'zoom',
	300,'drawsizeback',
	100,'drawsize',
plr=2}
ease{130,2,pop,0.1,'tanbumpyx',
	40,'grain',
	100,'tipsy',
}
ease{130,2,pop,100,'stealthglowred',
	-0,'stealthglowblue',
	-0,'stealthglowgreen',
plr=2}
ease{131,1,inExpo,100,'zoom',
	0,'tipsy',
}
ease{132,4,popElastic[1][6],-50,'flip',
	30000,'tinyz'
}
ease{132,1,pop,200,'zoom'}
set{132,0,'stealth',
	0,'dark',
	0,'reverse',
	0,'hidenoteflashes',
	0,'rotationy',
	0,'confusionyoffset',
plr=1}

--various recursive aft messing abouts
ease{80.25,2,inExpo,0.98,'recursediff',
	6,'recursevy',
	0,'recursevx'
}
ease{81,3,inQuad,0,'recursevy',
}

ease{129.5,0.5,inQuad,1,'recursediff',
	3,'recursevy'
}
ease{130,2,outQuad,50,'stealth',
plr=2}
ease{131,1,inExpo,0,'stealth',
	0,'recursevy',
	0,'recursediff',
plr=2}

--relating to the calm synth bit
set{260,70,'tipsyspeed'}
	--{272,0,'rotationy',
	--	0,'confusionyoffset'
	--}
ease{260,16,outExpo,
	--360,'rotationy',
	--2*pie,'confusionyoffset',
	-25,'flip',
	20,'tipsy',
	20,'drunk'
}

ease{260,1,outExpo,
	100,'dark0',
	100,'dark1',
	100,'dark2',
	100,'dark3',
	0.033,'alphastealth1',
	0.033,'alphastealth2',
	0.033,'alphastealth3',
	0.033,'alphastealth4',
}

for i,v in ipairs(synth) do
	local col=i%4
	local switch=(i+1)%2
	add{v[1],1,pop,-40,'dark'..col}
	add{v[1],3,pop,0.2,'alphastealth'..col}
	add{v[1],3,outExpo,0.4,'offset',}
	add{v[1],1,outExpo,-1/95,'load'}
	add{v[1],3,pop,-20,'amt'}
end
for i=0,3 do
	ease{260,8,outSine,99,'dark'..i}
end

--tah
ease{194,2,inExpo,0,'recursediff'}
for i=0,1 do
	local inv=2*(i%2)-1
	add{203+i*16,0.75,outExpo,scx*-2,'grad1posy',
		scx*-2,'grad2posy',
		0,'vigdiff',
		--scy*-2,'stary',
		--(math.random()*10)*scx,'starx'
	}
	add{203+i*16,1,inExpo,scx*2,'grad1posy',
		scx*2,'grad2posy',
		0.05,'vigdiff',
		--scy*2,'stary',
	}
	set{202,
		0,'zoom',
		50,'reverse',
		10000,'parabolaz',
		100,'zoomz',
		50,'flip',
		100,'dark0',
		100,'dark2',
		100,'dark3',
		100,'stealth',
		scy,'y',
	plr=2}
	set{218,
		100,'dark0',
		100,'dark1',
		100,'dark2',
		scy,'y',
	plr=2}
	for col=0,3 do
		set{205,
			0,'dark'..col
		}
		set{221,
			0,'dark'..col
		}
	end
	func{202,function(beat)
		--PP[2]:hidden(0)
		P2:SetHiddenRegions({{199,203},{205,208}})
	end}
	func{202+16,function(beat)
		--PP[2]:hidden(0)
		P2:SetHiddenRegions({{215,219},{221,223}})
	end}
	func{205+i*16,function(beat)
		--PP[2]:hidden(1)
	end}
	ease{203+i*16,1,inCirc,
		--scy*1,'y',
	plr=2}
	ease{203+i*16,1,outExpo,
		200,'zoom',
		--0,'dark',
		0,'stealth',
	plr=2}
	ease{204+i*16,1,inExpo,
		--100,'dark',
		100,'stealth',
		0,'zoom',
	plr=2}
	ease{203+i*16,1,outExpo,
		scy*-0.75,'y',
	plr=2}
	ease{203+i*16,1,inExpo,
		0,'y',
	plr=2}
	add{204+i*16,0.5,pop,
		100,'zoom',
	plr=2}
	--[[for pn=1,2 do
	local rr=math.random(-360,360) --rr stands for.random rotate :]
		ease{203+i*16,1,outExpo,
		rr*pn,'rotationy',
		-rad(rr)*pn,'confusionyoffset',
		plr=1}]]--
		set{196,
			0,'rotationx',
			0,'rotationy',
			0,'confusionxoffset',
			0,'confusionyoffset',
			0,'confusionoffset',
			0,'y',
		plr=1}
		for col=0,3 do 
			add{203+i*16,1,inQuad,
				-90*inv,'rotationy',
			plr=1}
			ease{203+i*16,2,pop,
				-600,'tinyz',
			}
			ease{204+i*16,1,outExpo,
				0.2,'fisheye',
				2,'playervibrate',
			}
			ease{204+i*16,1,inExpo,
				0,'fisheye',
				0,'playervibrate',
			}
			ease{204+i*16,1,outExpo,
				50,'brake',
			plr=1}
			ease{205+i*16,4,outExpo,
				0,'brake',
			plr=1}
			ease{204+i*16,4,popElastic[1][6],
				--90,'rotationz',
				30*inv,'noteskew',
				-30*inv,'skewx',
			}
			ease{203+i*16,2,outExpo,
				math.floor(math.random(pie*-16,pie*16),pie*2),'confusionoffset'..col,
				--50,'flip',
				--150,'invert',
				--scy/4,'y',
				20,'zoom',
				300,'drawsize',
				--100,'reverse',
				70,'stealth',
				-100,'flip',
			plr=1}
			ease{204+i*16,1,outExpo,
				--0,'confusionyoffset',
				0,'confusionoffset'..col,
				--0,'flip',
				--0,'invert',
				0,'y',
				100,'zoom',
				--0,'reverse',
				0,'stealth',
				0,'flip',
			plr=1}
		end
	end
--end

aux{'offset', 'amt'}
set{0,
	0,'offset',
	0,'amt'
}
node{'offset','amt',function(offset,amt,plr)
        local pi=math.pi/4
        local movex0, movex1, movex2, movex3, movey0, movey1, movey2, movey3 = 0,0,0,0,0,0,0,0
        if amt ~= 0 then
            movex0, movex1, movex2, movex3 =
                math.cos(pi*(offset+0+plr*4))*amt,
                math.cos(pi*(offset+1+plr*4))*amt,
                math.cos(pi*(offset+2+plr*4))*amt,
                math.cos(pi*(offset+3+plr*4))*amt
            movey0, movey1, movey2, movey3 =
                math.sin(pi*(offset+0+plr*4))*amt,
                math.sin(pi*(offset+1+plr*4))*amt,
                math.sin(pi*(offset+2+plr*4))*amt,
                math.sin(pi*(offset+3+plr*4))*amt
        end
        return movex0, movex1, movex2, movex3, movey0, movey1, movey2, movey3
end,
'movex0','movex1','movex2','movex3',
'movez0','movez1','movez2','movez3'
}
set{260,0,'rotationx',
	0,'confusionxoffset',
}
ease{260,4,outExpo,
	-120,'amt',
	--1,'offset',
	50,'flip',
	90,'rotationx',
	90,'winrotx',
	-rad(90),'confusionxoffset',
}
set{260,0,'dark',
	0,'stealth',
	0,'parabolaz',
	0,'reverse',
	100,'zoom',
	200,'zoomz',
	--100,'spiralholds',
	0.5,'fisheye'
}
ease{260,1,outExpo,-1200,'tiny',
}
ease{260,4,outExpo,0,'tiny',
}
ease{260,16,outExpo,1,'windiff',
	sh,'winbgy'
}

func{196,function(beat)
	P2:hidden(0)
	PP[2]:hidden(0)
end}

ease{260,29,inQuad,360,'rotationx',
	-rad(360),'confusionxoffset',
	360,'winrotx'
}
func{260,function(beat)
	windows:hidden(0)
	windowsbg:hidden(0)
	for i=1,2 do
		vignette[i]:hidden(1)
		load[i]:hidden(0)
	end
	vhsSprite:hidden(0)
	crtSprite:hidden(0)
end}
for i=0,1 do
	ease{271+i*0.5,1,pop,0,'dark'..i,
		50,'stealth'..i
	}
end
for i=0,1 do
	ease{287+i*0.5,1,pop,0,'dark'..i+1,
		50,'stealth'..i+1
	}
end
for i=0,1 do
	ease{303+i*0.5,1,pop,0,'dark'..i,
		50,'stealth'..i
	}
end
--set{260,100,'centered'}
ease{324,5,inQuad,0.5,'alphastealth'}
for col=0,3 do
	ease{332,2,inCirc,
		--0,'flip',
		-300,'amt',
		0,'dark'..col,
		0,'dark',
		1,'alphastealth'..col,
		0,'drunk',
		0,'bumpyx',
		0,'tipsy',
		0,'windiff',
	}
	{332,2,inExpo,
		3,'winskew',
		0,'winy',
		0,'winbgy',
		0,'winbgskew'
	}
	{332,2,inSine,
		0,'crt'	,
		0,'fisheye',
		1,'load'
	}
	{332,4,pop,-50,'tiny',
		10,'skewy',
		-10,'noteskewy'
	}
	add{332+col*0.5,1,pop,0.1,'load'}
end

func{334,function(beat)
	for i=1,2 do
		load[i]:hidden(1)
	end
	windowsbg:hidden(1)
end}
func{335,function(beat)
	vhsSprite:hidden(1)
	crtSprite:hidden(1)
end}

for i,v in ipairs(offsetdrums) do
	add{332,16,linear,0.33,'offset'}
	ease{332,13,inExpo,0,'confusionxoffset',
		0,'rotationx'
	}
	if v[2]==0 then
		if i<14 then
			add{v[1],1,pop,-100,'beat'}
		else
		end
	end
	if v[2]==1 then
		add{v[1],1,pop,-100,'tiny',
			0.2,'offset'
		}
	end
end
ease{340,5,inCirc,0,'amt',
	-25,'flip',
}
for i=0,15+8 do
	local inv=2*(i%2)-1
	set{323,100,'bumpyxperiod'}
	ease{324+i*0.25,0.25,outExpo,((0+i^1.1)*inv),'bumpyx'}
end

for i=0,41-4 do
	local pn=i%8/4+1
	ease{340.5+i/8,0.25,pop,(i*2*(1/50))*40+20,'stealth'..i%4}
end
-- dropppppp
set{346,0,'rotationy'}
for i=0,16 do
	local inv=2*(i%2)-1
	local switch=(i+1)%2
	plr=1
	set{348-1,
		100,'dark1',
		100,'dark3',
		100,'hidenoteflashes1',
		100,'hidenoteflashes3',
		100,'stealth1',
		100,'stealth3',
		--25,'flip'
	}
	ease{348+i-1,1,inExpo,
		10*inv,'noteskewy',
		-10*inv,'skewy',
		40*inv,'cubicx',
		20*inv,'rotationy',
		-20*inv,'rotationx',
		150*switch,'invert',
	}
	plr=2
	ease{348+i-1,1,inExpo,
		-10*inv,'noteskewy',
		10*inv,'skewy',
		-40*inv,'cubicx',
		-20*inv,'rotationy',
		20*inv,'rotationx',
		150*switch,'invert',
	}
	set{348-1,
		100,'dark0',
		100,'dark2',
		100,'hidenoteflashes0',
		100,'hidenoteflashes2',
		100,'stealth0',
		100,'stealth2',
	}
	plr=nil
	ease{348+i-1,1,bounce,
		-100,'tiny',
		-1000,'tinyz',
		40,'movey',
		-50,'amt'
	}
end



ease{379.5,0.5,outExpo,1,'zigzag',
	300,'longholds',
	30000,'gayholds'
}
ease{379.5,0.5,inExpo,0,'zigzag',0,'longholds',0,'gayholds'}

ease{364-1,1,inExpo,
	0,'noteskewy',
	0,'skewy',
	0,'rotationy',
	0,'rotationx',
	0,'cubicx',
	0,'invert',
	0,'flip',
}
for col=0,3 do
set{364,
	0,'dark'..col,
	0,'stealth'..col,
	0,'hidenoteflashes'..col,
}
end
ease{436-2,2,inCirc,
	50,'flip',
	-150,'amt'
}

end)"
Type = "ActorFrame"
><children>
</children></Mods>
